<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://aidanwangcy.github.io</id>
    <title>Aidan wang</title>
    <updated>2019-07-07T02:58:51.954Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://aidanwangcy.github.io"/>
    <link rel="self" href="https://aidanwangcy.github.io/atom.xml"/>
    <subtitle>Pain is motivation.</subtitle>
    <logo>https://aidanwangcy.github.io/images/avatar.png</logo>
    <icon>https://aidanwangcy.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, Aidan wang</rights>
    <entry>
        <title type="html"><![CDATA[使用 Linux 搭建 时间胶囊（Time Machine）服务器]]></title>
        <id>https://aidanwangcy.github.io/post/shi-yong-linux-da-jian-shi-jian-xiao-nang-time-machinefu-wu-qi</id>
        <link href="https://aidanwangcy.github.io/post/shi-yong-linux-da-jian-shi-jian-xiao-nang-time-machinefu-wu-qi">
        </link>
        <updated>2019-07-07T02:29:51.000Z</updated>
        <summary type="html"><![CDATA[<p>由于前段时间mac屏幕突然报废，意识到了数据备份的重要性，时常插硬盘等待备份有时候很是麻烦，所以正好实验室有一台自己用的装了deepin的服务器那就在上面搭个时间胶囊的服务器，连进校园网后能让他自动备份。</p>
]]></summary>
        <content type="html"><![CDATA[<p>由于前段时间mac屏幕突然报废，意识到了数据备份的重要性，时常插硬盘等待备份有时候很是麻烦，所以正好实验室有一台自己用的装了deepin的服务器那就在上面搭个时间胶囊的服务器，连进校园网后能让他自动备份。</p>
<!--more-->
<p>在deepin上搭建一个Time Machine服务器，仍有部分问题需要解决</p>
<h1 id="1安装需要的软件">1.安装需要的软件</h1>
<pre><code>sudo apt install netatalk
</code></pre>
<p>一个afp服务器软件，其中包含avahi</p>
<h1 id="2准备文件夹">2.准备文件夹</h1>
<p>在想要备份的文件夹内新建TimeMachineFolder文件夹</p>
<h1 id="3设置netatalk">3.设置netatalk</h1>
<p>首先备份配置文件</p>
<pre><code>sudo mv /etc/netatalk/AppleVolumes.default  /etc/netatalk/AppleVolumes.default.old
</code></pre>
<p>然后创建新配置文件</p>
<pre><code>sudo touch /etc/netatalk/AppleVolumes.default
</code></pre>
<p>使用Vim在文件末尾添加下列语句</p>
<pre><code>:DEFAULT: options:upriv,usedots
/home/tm/TimeMachineFolder &quot;My Time Machine&quot; options:tm volsizelimit:102400
</code></pre>
<p>注意将第2行的文件夹路径设定为你再第2步中创建的文件夹的路径。</p>
<p>第二行中的<code>volsizelimit</code>设定了Time Machine将会使用的最大硬盘空间，单位是MB。</p>
<h1 id="4重启netatalk">4.重启netatalk</h1>
<pre><code>sudo service netatalk restart
</code></pre>
<h1 id="5在mac上连接到time-machine">5.在Mac上连接到Time Machine</h1>
<p>首先直接尝试在Time Machine中选择这个服务器（会显示在可用磁盘下面，名字显示为第四步中你netatalk设置文件中指定的名字）。</p>
<p>如果你无法找到，那么打开Finder并按下⌘+K，在弹出来的窗口中，于服务器地址一栏输入afp://IP.of.your.server/，然后点连接。</p>
<p><img src="https://aidanwangcy.github.io/post-images/1562467606034.png" alt=""></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[numpy中tile函数]]></title>
        <id>https://aidanwangcy.github.io/post/numpy-zhong-tile-han-shu</id>
        <link href="https://aidanwangcy.github.io/post/numpy-zhong-tile-han-shu">
        </link>
        <updated>2019-06-26T05:04:43.000Z</updated>
        <summary type="html"><![CDATA[<p><strong>功能：把数组沿各个方向复制</strong></p>
]]></summary>
        <content type="html"><![CDATA[<p><strong>功能：把数组沿各个方向复制</strong></p>
<!--more-->
<p>函数格式tile(A,reps)</p>
<p>A和reps都是array_like</p>
<p>A的类型众多，几乎所有类型都可以：array，list，tuple，dict，matrix以及基本数据类型int，string，float以及bool类型</p>
<p>reps的类型也很多，可以是tuple，list，dict，array，int，bool。但不可以是float，string，matrix类型。</p>
<p>返回的是数组类型</p>
<hr>
<pre><code class="language-python">&gt;&gt;&gt; numpy.tile([1,2], 4)
array([1, 2, 1, 2, 1, 2, 1, 2])
# 以一个纬度重复[1,2]4次
# 重复本身数组四次

&gt;&gt;&gt; numpy.tile([1,2], (3,4))
array([[1, 2, 1, 2, 1, 2, 1, 2],
       [1, 2, 1, 2, 1, 2, 1, 2],
       [1, 2, 1, 2, 1, 2, 1, 2]])
# 以两个维度重复[1,2]，第一纬度重复3次，第二纬度重复4次
# 二维时第一个数代表行数重复，后一个数代表列数重复

&gt;&gt;&gt; numpy.tile([1,2], (2,3,4))
array([[[1, 2, 1, 2, 1, 2, 1, 2],
        [1, 2, 1, 2, 1, 2, 1, 2],
        [1, 2, 1, 2, 1, 2, 1, 2]],
       [[1, 2, 1, 2, 1, 2, 1, 2],
        [1, 2, 1, 2, 1, 2, 1, 2],
        [1, 2, 1, 2, 1, 2, 1, 2]]])
#以三个维度重复[1,2]，第一纬度重复2次，第二纬度重复3次，第三纬度重复4次
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[c# chart控件的使用]]></title>
        <id>https://aidanwangcy.github.io/post/c-chart-kong-jian-de-shi-yong</id>
        <link href="https://aidanwangcy.github.io/post/c-chart-kong-jian-de-shi-yong">
        </link>
        <updated>2019-06-25T02:33:30.000Z</updated>
        <summary type="html"><![CDATA[<p><strong>在项目里制作一个实时显示激光位置的坐标图</strong></p>
]]></summary>
        <content type="html"><![CDATA[<p><strong>在项目里制作一个实时显示激光位置的坐标图</strong></p>
<!--more-->
<p>拖入chart控件</p>
<p>需要在数据进来的位置新建Series，ChartArea</p>
<pre><code class="language-c#">	viewer.Series.Clear();//清空默认曲线
	Series series1 = new Series (&quot;xy&quot;);//new一个新曲线
	series1.ChartType = SeriesChartType.Point;//曲线类型选择point
	series1.Points.AddXY(Convert.ToSingle(strXvalue), Convert.ToSingle(strYvalue));添加接收到的数据到曲线上
	series1.MarkerSize = Convert.ToInt32(strLaser)/1000;//设置曲线点的大小，根据激光强度
	viewer.ChartAreas[0].AxisX.MajorGrid.Interval = 2;//设置横轴网格间隔为2
	viewer.Series.Add(series1);//把曲线添加到图表上
</code></pre>
<p>其他选项可以在属性设置中设置</p>
<p>最重要的就是：</p>
<p>ChartArea//图标区</p>
<p>Series//曲线</p>
<p>Legends//图例</p>
<p><img src="https://aidanwangcy.github.io/post-images/1561433366718.png" alt=""></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[MAC下NodeMCU配置MicroPython笔记]]></title>
        <id>https://aidanwangcy.github.io/post/mac-xia-nodemcu-pei-zhi-micropython-bi-ji</id>
        <link href="https://aidanwangcy.github.io/post/mac-xia-nodemcu-pei-zhi-micropython-bi-ji">
        </link>
        <updated>2019-06-16T03:12:54.000Z</updated>
        <summary type="html"><![CDATA[<p><strong>基础环境搭建，烧录MicroPython固件，以及进入命令</strong></p>
]]></summary>
        <content type="html"><![CDATA[<p><strong>基础环境搭建，烧录MicroPython固件，以及进入命令</strong></p>
 <!--more-->
<p><img src="https://aidanwangcy.github.io/post-images/1560669367913.png" alt=""></p>
<h2 id="环境准备">环境准备：</h2>
<p><strong>安装esptool：</strong></p>
<pre><code>pip3 install esptool
</code></pre>
<p><strong>需要使用WebREPL client for MicroPython：</strong></p>
<p><a href="https://github.com/micropython/webrepl">WebREPL</a>
​
下载或clone项目到本地</p>
<p><strong>安装nodemcu驱动：</strong></p>
<p><a href="https://www.silabs.com/products/development-tools/software/usb-to-uart-bridge-vcp-drivers">nodemcu驱动</a>
​
下载对应驱动（正常驱动可能识别不了需要安装传统版本，如遇到不能使用，请到-系统偏好设置-安全与隐私 中选择允许）</p>
<p><strong>下载固件：</strong></p>
<p><a href="https://micropython.org/download">MicroPython固件</a>下载对应固件</p>
<h2 id="1连接nodemcu到mac上">1.连接nodemcu到Mac上</h2>
<p>使用</p>
<pre><code>ls /dev/tty*
</code></pre>
<p>或者</p>
<pre><code>ls /dev/cu*
</code></pre>
<p>查询端口是否可用（即列表中是否包含SLABUSBtoUART）</p>
<h2 id="2擦除之前固件">2.擦除之前固件</h2>
<p>运行</p>
<pre><code>esptool.py --port /dev/cu.SLABUSBtoUART eraseflash
</code></pre>
<p>或</p>
<pre><code>esptool.py --port /dev/tty.SLABUSBtoUART eraseflash
</code></pre>
<p>擦除原厂固件,直到出现</p>
<pre><code>chip erase complete successfully
</code></pre>
<h2 id="3烧录固件">3.烧录固件</h2>
<p>cd 到固件下载目录</p>
<p>使用命令</p>
<pre><code>esptool.py --port /dev/tty.SLABUSBtoUART --baud 115200 writeflash --flashsize=detect -fm dio 0 esp8266-20190125-v1.10.bin
</code></pre>
<p>（其中esp8266-20190125-v1.10.bin为固件名，单独的esp8266模块可省略-fm dio 0）</p>
<h2 id="4连接esp8266">4.连接esp8266</h2>
<p>​	运行</p>
<pre><code>screen /dev/tty.SLABUSBtoUART 115200 fn=off
</code></pre>
<p>​	出现光标后按Nodemcu上的RST进行硬中断</p>
<p>​	出现MicroPython 说明烧写成功</p>
<p>​	OSError:[Errno 2] ENOENT（错误表示没有main.py）</p>
<h2 id="5启用webrepl服务">5.启用WEBREPL服务</h2>
<p>​	输入</p>
<pre><code>import webreplsetup
</code></pre>
<p>会要求你确认是否启用，输入E启用，输入D禁用</p>
<p>​	设置网密码后重启</p>
<h2 id="6使用webrepl进行文件写入及管理">6.使用WEBREPL进行文件写入及管理</h2>
<p>​	连接NodeMCU自己的ap，ssid为MicroPython-******，password为micropythonN</p>
<p>​	打开下载的webrepl包中webrepl.html文件</p>
<p>​	点击左上角connect连接成功后即可进行编辑或上传文件</p>
<hr>
<h1 id="一个设置和连接wifi的demo">一个设置和连接wifi的demo</h1>
<pre><code class="language-python">import network

def doconnect():
​    wlan = network.WLAN(network.STAIF)
​    wlan.active(True)
​    if not wlan.isconnected():
​        print('connecting to network...')
​        wlan.connect('MERCURY20C2', '66668888')
​        while not wlan.isconnected():
​            pass
​    print('connect network config:', wlan.ifconfig())
​    print(&quot;Connect AP done!&quot;)

def setAP():
​    ap = network.WLAN(network.APIF)
​    ap.active(True)
​    ap.config(essid='MicroPy', password='66668888')
​    print('AP config:', ap.ifconfig())
​    print('Set AP done!')

if name == 'main':
​    print('Hello')
​    doconnect()
​    setAP()
</code></pre>
]]></content>
    </entry>
</feed>